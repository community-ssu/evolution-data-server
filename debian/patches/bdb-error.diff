Index: addressbook/backends/file/e-book-backend-file.c
===================================================================
--- addressbook/backends/file/e-book-backend-file.c	(revision 38)
+++ addressbook/backends/file/e-book-backend-file.c	(working copy)
@@ -83,6 +83,7 @@
 static struct {
 	volatile int ref_count;
 	DB_ENV *env;
+	gboolean had_error;
 } global_env = { 0, NULL };
 
 static EDataBookStatus
@@ -213,12 +214,16 @@
 
 	string_to_dbt (vcard, &vcard_dbt);
 
+	global_env.had_error = FALSE;
 	db_error = db->put (db, NULL, &id_dbt, &vcard_dbt, 0);
+	if (global_env.had_error) db_error = ENOSPC;
 
 	g_free (vcard);
 
 	if (0 == db_error) {
+		global_env.had_error = FALSE;
 		db_error = db->sync (db, 0);
+		if (global_env.had_error) db_error = ENOSPC;
 		if (db_error != 0) {
 			g_warning ("db->sync failed with %s", db_strerror (db_error));
 		}
@@ -346,10 +351,14 @@
 	
 	string_to_dbt (vcard_with_rev, &vcard_dbt);	
 
+	global_env.had_error = FALSE;
 	db_error = db->put (db, NULL, &id_dbt, &vcard_dbt, 0);
+	if (global_env.had_error) db_error = ENOSPC;
 
 	if (0 == db_error) {
+		global_env.had_error = FALSE;
 		db_error = db->sync (db, 0);
+		if (global_env.had_error) db_error = ENOSPC;
 		if (db_error != 0) {
 			g_warning (G_STRLOC ": db->sync failed with %s", db_strerror (db_error));
 		} else {
@@ -1077,6 +1086,7 @@
 #endif
 {
 	g_warning ("libdb error: %s", buf2);
+	global_env.had_error = TRUE;
 }
 
 
@@ -1141,6 +1151,7 @@
 		}
 
 		global_env.env = env;
+		global_env.had_error = FALSE;
 		g_atomic_int_inc (&global_env.ref_count);
 	}
 	g_static_mutex_unlock(&global_env_lock);
