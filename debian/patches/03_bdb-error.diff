Hack because libdb sometimes claims that an operation succeeded when the error
handler was actually fired.

Index: addressbook/backends/file/e-book-backend-file.c
===================================================================
--- addressbook/backends/file/e-book-backend-file.c.orig	2008-02-19 11:04:22.000000000 +0000
+++ addressbook/backends/file/e-book-backend-file.c	2008-02-19 11:07:09.000000000 +0000
@@ -83,6 +83,7 @@
 static struct {
 	int ref_count;
 	DB_ENV *env;
+	gboolean had_error;
 } global_env;
 
 static EBookBackendSyncStatus
@@ -213,12 +214,16 @@
 
 	string_to_dbt (vcard, &vcard_dbt);
 
+	global_env.had_error = FALSE;
 	db_error = db->put (db, NULL, &id_dbt, &vcard_dbt, 0);
+	if (global_env.had_error) db_error = ENOSPC;
 
 	g_free (vcard);
 
 	if (0 == db_error) {
+		global_env.had_error = FALSE;
 		db_error = db->sync (db, 0);
+		if (global_env.had_error) db_error = ENOSPC;
 		if (db_error != 0) {
 			g_warning ("db->sync failed with %s", db_strerror (db_error));
 		}
@@ -337,7 +342,9 @@
 	string_to_dbt (dbt_id, &id_dbt);
 	string_to_dbt (vcard_with_rev, &vcard_dbt);
 
+	global_env.had_error = FALSE;
 	db_error = db->put (db, NULL, &id_dbt, &vcard_dbt, 0);
+	if (global_env.had_error) db_error = ENOSPC;
 
 	g_free (vcard_with_rev);
 	
@@ -365,7 +372,9 @@
 	status = modify_contact (bf, vcard, contact);
 	
 	if (status == GNOME_Evolution_Addressbook_Success) {
+		global_env.had_error = FALSE;
 		db_error = db->sync (db, 0);
+		if (global_env.had_error) db_error = ENOSPC;
 		if (db_error == 0) {
 			e_book_backend_summary_remove_contact (bf->priv->summary,
 							       e_contact_get_const (*contact, E_CONTACT_UID));
@@ -417,7 +426,9 @@
 	}
 
 	/* Sync the database */
+	global_env.had_error = FALSE;
 	db_error = db->sync (db, 0);
+	if (global_env.had_error) db_error = ENOSPC;
 	if (db_error != 0) {
 		return db_error_to_status (db_error);
 	}
@@ -1140,6 +1151,7 @@
 #endif
 {
 	g_warning ("libdb error: %s", buf2);
+	global_env.had_error = TRUE;
 }
 
 
@@ -1204,6 +1216,7 @@
 		}
 
 		global_env.env = env;
+		global_env.had_error = FALSE;
 		global_env.ref_count = 1;
 	}
 	g_static_mutex_unlock(&global_env_lock);
