Index: evolution-data-server/addressbook/backends/file/e-book-backend-file.c
===================================================================
--- evolution-data-server.orig/addressbook/backends/file/e-book-backend-file.c	2008-12-11 10:41:09.000000000 +0200
+++ evolution-data-server/addressbook/backends/file/e-book-backend-file.c	2008-12-11 10:42:35.000000000 +0200
@@ -48,7 +48,6 @@
 #include "libebook/e-contact.h"
 
 #include "libedata-book/e-book-backend-sexp.h"
-#include "libedata-book/e-book-backend-summary.h"
 #include "libedata-book/e-data-book.h"
 #include "libedata-book/e-data-book-view.h"
 
@@ -64,18 +63,15 @@
 #define E_BOOK_BACKEND_FILE_VERSION "0.2"
 
 #define PAS_ID_PREFIX "pas-id-"
-#define SUMMARY_FLUSH_TIMEOUT 5000
 
 G_DEFINE_TYPE (EBookBackendFile, e_book_backend_file, E_TYPE_BOOK_BACKEND_SYNC);
 
 struct _EBookBackendFilePrivate {
 	char     *dirname;
 	char     *filename;
-	char     *summary_filename;
 	char     *index_filename;
 	DB       *file_db;
 	DB_ENV   *env;
-	EBookBackendSummary *summary;
 	EBookBackendFileIndex *index;
 	char     *sort_order;
 };
@@ -124,42 +120,6 @@
 	return contact;
 }
 
-static void
-build_summary (EBookBackendFilePrivate *bfpriv)
-{
-	DB             *db = bfpriv->file_db;
-	DBC            *dbc;
-	int            db_error;
-	DBT  id_dbt, vcard_dbt;
-
-	db_error = db->cursor (db, NULL, &dbc, 0);
-
-	if (db_error != 0) {
-		g_warning (G_STRLOC ": db->cursor failed with %s", db_strerror (db_error));
-		return;
-	}
-
-	memset (&vcard_dbt, 0, sizeof (vcard_dbt));
-	memset (&id_dbt, 0, sizeof (id_dbt));
-	db_error = dbc->c_get(dbc, &id_dbt, &vcard_dbt, DB_FIRST);
-
-	while (db_error == 0) {
-
-		/* don't include the version in the list of cards */
-		if (id_dbt.size != strlen(E_BOOK_BACKEND_FILE_VERSION_NAME) + 1
-		    || strcmp (id_dbt.data, E_BOOK_BACKEND_FILE_VERSION_NAME)) {
-			EContact *contact = create_contact (id_dbt.data, vcard_dbt.data);
-			e_book_backend_summary_add_contact (bfpriv->summary, contact);
-			g_object_unref (contact);
-		}
-
-		db_error = dbc->c_get(dbc, &id_dbt, &vcard_dbt, DB_NEXT);
-
-	}
-
-	dbc->c_close (dbc);
-}
-
 static char *
 e_book_backend_file_create_unique_id (void)
 {
@@ -250,7 +210,6 @@
 
 	status = do_create (bf, vcard, contact);
 	if (status == GNOME_Evolution_Addressbook_Success) {
-		e_book_backend_summary_add_contact (bf->priv->summary, *contact);
 		e_book_backend_file_index_add_contact (bf->priv->index, *contact);
 		e_book_backend_file_index_sync (bf->priv->index);
 	}
@@ -311,10 +270,6 @@
 
 	*ids = removed_cards;
 
-	for (l = removed_cards; l; l = l->next) {
-		char *id = l->data;
-		e_book_backend_summary_remove_contact (bf->priv->summary, id);
-	}
 	while (removed_contacts) {
 		EContact *contact = removed_contacts->data;
 		e_book_backend_file_index_remove_contact (bf->priv->index, contact);
@@ -413,9 +368,6 @@
 		db_error = db->sync (db, 0);
 		if (global_env.had_error) db_error = ENOSPC;
 		if (db_error == 0) {
-			e_book_backend_summary_remove_contact (bf->priv->summary,
-							       e_contact_get_const (*contact, E_CONTACT_UID));
-			e_book_backend_summary_add_contact (bf->priv->summary, *contact);
 			e_book_backend_file_index_sync (bf->priv->index);
 			
 			return GNOME_Evolution_Addressbook_Success;
@@ -454,11 +406,6 @@
 		if (status != GNOME_Evolution_Addressbook_Success)
 			goto done;
 
-		/* Update the summary */
-		e_book_backend_summary_remove_contact (bf->priv->summary,
-						       e_contact_get_const (contact, E_CONTACT_UID));
-		e_book_backend_summary_add_contact (bf->priv->summary, contact);
-
 		/* Pass the contact back to the server for view updates */
 		*contacts = g_list_prepend (*contacts, contact);
 	}
@@ -527,79 +474,55 @@
 	
 	d(printf ("e_book_backend_file_get_contact_list (%s)\n", search));
 	status = GNOME_Evolution_Addressbook_Success;
-	if (e_book_backend_summary_is_summary_query (bf->priv->summary, search)) {
-	
-		/* do a summary query */
-		GPtrArray *ids = e_book_backend_summary_search (bf->priv->summary, search);
-		int i;
-
-		for (i = 0; i < ids->len; i ++) {
-			char *id = g_ptr_array_index (ids, i);
-			string_to_dbt (id, &id_dbt);
-			memset (&vcard_dbt, 0, sizeof (vcard_dbt));
-			vcard_dbt.flags = DB_DBT_MALLOC;
-
-			db_error = db->get (db, NULL, &id_dbt, &vcard_dbt, 0);
-			if (db_error == 0) {
-				contact_list = g_list_prepend (contact_list, vcard_dbt.data);
-			} else {
-				g_warning (G_STRLOC ": db->get failed with %s", db_strerror (db_error));
-				status = db_error_to_status (db_error);
-				break;
-			}
-		}
-		g_ptr_array_free (ids, TRUE);
-	} else {
-		search_needed = TRUE;
-		if (!strcmp (search, "(contains \"x-evolution-any-field\" \"\")"))
-			search_needed = FALSE;
-
-		card_sexp = e_book_backend_sexp_new (search);
-		if (!card_sexp) {
-			/* XXX this needs to be an invalid query error of some sort*/
-			return GNOME_Evolution_Addressbook_OtherError;
-		}
 
-		db_error = db->cursor (db, NULL, &dbc, 0);
+	search_needed = TRUE;
+	if (!strcmp (search, "(contains \"x-evolution-any-field\" \"\")"))
+		search_needed = FALSE;
+
+	card_sexp = e_book_backend_sexp_new (search);
+	if (!card_sexp) {
+		/* XXX this needs to be an invalid query error of some sort*/
+		return GNOME_Evolution_Addressbook_OtherError;
+	}
 
-		if (db_error != 0) {
-			g_warning (G_STRLOC ": db->cursor failed with %s", db_strerror (db_error));
-			/* XXX this needs to be some CouldNotOpen error */
-			return db_error_to_status (db_error);
-		}
+	db_error = db->cursor (db, NULL, &dbc, 0);
 
-		memset (&vcard_dbt, 0, sizeof (vcard_dbt));
-		vcard_dbt.flags = DB_DBT_MALLOC;
-		memset (&id_dbt, 0, sizeof (id_dbt));
-		db_error = dbc->c_get(dbc, &id_dbt, &vcard_dbt, DB_FIRST);
+	if (db_error != 0) {
+		g_warning (G_STRLOC ": db->cursor failed with %s", db_strerror (db_error));
+		/* XXX this needs to be some CouldNotOpen error */
+		return db_error_to_status (db_error);
+	}
 
-		while (db_error == 0) {
+	memset (&vcard_dbt, 0, sizeof (vcard_dbt));
+	vcard_dbt.flags = DB_DBT_MALLOC;
+	memset (&id_dbt, 0, sizeof (id_dbt));
+	db_error = dbc->c_get(dbc, &id_dbt, &vcard_dbt, DB_FIRST);
 
-			/* don't include the version in the list of cards */
-			if (id_dbt.size != strlen(E_BOOK_BACKEND_FILE_VERSION_NAME) + 1
-			    || strcmp (id_dbt.data, E_BOOK_BACKEND_FILE_VERSION_NAME)) {
+	while (db_error == 0) {
+		/* don't include the version in the list of cards */
+		if (id_dbt.size != strlen(E_BOOK_BACKEND_FILE_VERSION_NAME) + 1
+		    || strcmp (id_dbt.data, E_BOOK_BACKEND_FILE_VERSION_NAME)) {
 
-				if ((!search_needed) || (card_sexp != NULL && e_book_backend_sexp_match_vcard  (card_sexp, vcard_dbt.data))) {
-					contact_list = g_list_prepend (contact_list, vcard_dbt.data);
-				}
+			if ((!search_needed) || (card_sexp != NULL && e_book_backend_sexp_match_vcard  (card_sexp, vcard_dbt.data))) {
+				contact_list = g_list_prepend (contact_list, vcard_dbt.data);
 			}
+		}
 
-			db_error = dbc->c_get(dbc, &id_dbt, &vcard_dbt, DB_NEXT);
+		db_error = dbc->c_get(dbc, &id_dbt, &vcard_dbt, DB_NEXT);
 
-		}
-		g_object_unref (card_sexp);
+	}
+	g_object_unref (card_sexp);
 		
-		if (db_error == DB_NOTFOUND) {
-			status = GNOME_Evolution_Addressbook_Success;
-		} else {
-			g_warning (G_STRLOC ": dbc->c_get failed with %s", db_strerror (db_error));
-			status = db_error_to_status (db_error);
-		}
+	if (db_error == DB_NOTFOUND) {
+		status = GNOME_Evolution_Addressbook_Success;
+	} else {
+		g_warning (G_STRLOC ": dbc->c_get failed with %s", db_strerror (db_error));
+		status = db_error_to_status (db_error);
+	}
 
-		db_error = dbc->c_close(dbc);
-		if (db_error != 0) {
-			g_warning (G_STRLOC ": dbc->c_close failed with %s", db_strerror (db_error));
-		}
+	db_error = dbc->c_close(dbc);
+	if (db_error != 0) {
+		g_warning (G_STRLOC ": dbc->c_close failed with %s", db_strerror (db_error));
 	}
 
 	*contacts = contact_list;
@@ -696,9 +619,6 @@
 
 		ids = e_book_backend_file_index_query (bf->priv->index, query);
 		using_index = TRUE;
-	} else if (e_book_backend_summary_is_summary_query (bf->priv->summary, query)) {
-		/* do a summary query */
-		ids = e_book_backend_summary_search (bf->priv->summary, e_data_book_view_get_card_query (book_view));
 	} else if (allcontacts) {
 		if (priv->sort_order) {
 			g_debug (G_STRLOC ": sending contacts in order sort by %s", priv->sort_order);
@@ -1396,15 +1316,6 @@
 	}
 	db_mtime = sb.st_mtime;
 
-	g_free (bf->priv->summary_filename);
-	bf->priv->summary_filename = g_strconcat (bf->priv->filename, ".summary", NULL);
-	bf->priv->summary = e_book_backend_summary_new (bf->priv->summary_filename, SUMMARY_FLUSH_TIMEOUT);
-	if (e_book_backend_summary_is_up_to_date (bf->priv->summary, db_mtime) == FALSE
-	    || e_book_backend_summary_load (bf->priv->summary) == FALSE ) {
-		build_summary (bf->priv);
-	}
-
-
 	g_free (bf->priv->index_filename);
 	bf->priv->index = e_book_backend_file_index_new ();
 	bf->priv->index_filename = g_build_filename (bf->priv->dirname, "index.db", NULL);
@@ -1459,12 +1370,6 @@
 	if (-1 == g_unlink (bf->priv->index_filename))
 		g_warning ("failed to remove index file `%s`: %s", bf->priv->index_filename, strerror (errno));
 
-	/* unref the summary before we remove the file so it's not written out again */
-	g_object_unref (bf->priv->summary);
-	bf->priv->summary = NULL;
-	if (-1 == g_unlink (bf->priv->summary_filename))
-		g_warning ("failed to remove summary file `%s`: %s", bf->priv->summary_filename, strerror (errno));
-
 	dir = g_dir_open (bf->priv->dirname, 0, NULL);
 	if (dir) {
 		const char *name;
@@ -1587,11 +1492,6 @@
 	}
 	G_UNLOCK (global_env);
 	
-	if (bf->priv->summary) {
-		g_object_unref (bf->priv->summary);
-		bf->priv->summary = NULL;
-	}
-
 	G_OBJECT_CLASS (e_book_backend_file_parent_class)->dispose (object);	
 }
 
@@ -1604,7 +1504,6 @@
 
 	g_free (bf->priv->filename);
 	g_free (bf->priv->dirname);
-	g_free (bf->priv->summary_filename);
 	g_free (bf->priv->index_filename);
 	
 	g_free (bf->priv);
